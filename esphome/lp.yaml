###

  - platform: template
    id: custom_modbus_cmd
    name: "${dev} Load Profile"
    lambda: |-
      esphome::modbus_controller::ModbusController *controller = id(edpbox);
      std::vector<uint8_t> payload;
      payload.push_back(0x1);
      payload.push_back(0x44);
      payload.push_back(0);
      payload.push_back(0x1);

      auto on_response = [](esphome::modbus_controller::ModbusRegisterType, uint16_t, const std::vector<uint8_t> &data) {

        // data[0] year 20
        // data[1] year 21
        // char m = data[2]; // month
        // char d = data[3]; // day
        // ...
        // data[x-y] uint32 import 4bytes
        // data[x-y] uint32 export 4bytes

        std::string result = {"test"};

        id(custom_modbus_cmd).publish_state(result);
      };

      esphome::modbus_controller::ModbusCommandItem custom_command = esphome::modbus_controller::ModbusCommandItem::create_custom_command(controller,payload,on_response);
      edpbox->queue_command(custom_command);
      ESP_LOGI("ModbusLambda", "Custom command send");
      return {};

###
##
#
