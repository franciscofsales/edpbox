# Striped config for mono phase meter.
# See edpbox1.yaml for more configs.
# ESP32 is recommended.
# Disable logger for esp8266.

substitutions:

  dev: EB2
  name: edpbox1 # testing 1, then 2

esphome:

  name: ${name}

  #platform: ESP8266
  #board: esp01_1m

  platform: ESP32
  board: esp32dev

  on_boot:
    priority: -500
    then:
      - delay: 10s
      - switch.turn_on: edpbox_polling

interval:

  - interval: 7s
    then:
      - lambda: |-
          if (id(edpbox_polling).state) {
              id(edpbox).update();
          }

wifi:

  ssid: !secret wifi_ssid
  password: !secret wifi_key
#  ssid: my_wifi
#  password: edpbox123

  ap:
    ssid: "Fallback ${dev}"
    password: edpbox123

captive_portal:

web_server:

#logger:

api:

  password: !secret api_key

ota:

  password: !secret ota_key

time:

  - platform: homeassistant
    id: esptime

switch:

  - platform: restart
    name: "${dev} ESP Restart"

  - platform: template
    name: "${dev} ESP Polling"
    id: "edpbox_polling"
    optimistic: yes

sensor:

  - platform: template
    name: "${dev} ESP Free Heap"
    lambda: |-
      int heap = ESP.getFreeHeap();
      return heap / 1024.0;
    unit_of_measurement: "kB"
    update_interval: 30s
    icon: mdi:chip

  - platform: wifi_signal
    name: "${dev} ESP Signal"
    update_interval: 30s

  - platform: uptime
    name: "${dev} ESP Uptime"
    filters:
      - lambda: return x/3600;
    unit_of_measurement: "h"
    accuracy_decimals: 1

### ### ###

uart:

  id: modbus_serial
  tx_pin: 17
  rx_pin: 18
  baud_rate: 9600
  stop_bits: 1

modbus_controller:

  uart_id: modbus_serial
  command_throttle: 500ms
  id: edpbox
  update_interval: never
  address: 0x1
  sensors:

### ### ###

# 0x006C

    - id: VolL1
      name: "${dev} Voltage L1"
      address: 0x006C
      offset: 0
      unit_of_measurement: "V"
      modbus_functioncode: "read_input_registers"
      value_type: U_WORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.1
      device_class: voltage

    - id: Cur
      name: "${dev} Current L1"
      address: 0x006C
      offset: 2
      unit_of_measurement: "A"
      modbus_functioncode: "read_input_registers"
      value_type: U_WORD
      filters:
        - multiply: 0.1
      accuracy_decimals: 1
      device_class: current

# eof 6C

# begin 0x0079

    - id: ActPower
      name: "${dev} Active Power"
      address: 0x0079
      offset: 0
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 0
      device_class: power
      unit_of_measurement: "W"

    - id: ActPowExp
      name: "${dev} Active Power Export"
      address: 0x0079
      offset: 4
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 0
      device_class: power
      unit_of_measurement: "W"
      internal: true # disable sensor

    - id: PowFac
      name: "${dev} Power Factor"
      address: 0x0079
      offset: 8
      unit_of_measurement: "pu"
      modbus_functioncode: "read_input_registers"
      value_type: U_WORD
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
      device_class: power_factor

# eof 79

# 0x007F

    - id: Freq
      name: "${dev} Frequency"
      address: 0x007F
      offset: 0
      unit_of_measurement: "Hz"
      modbus_functioncode: "read_input_registers"
      value_type: U_WORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.1
      icon: "mdi:pulse"

# eof 7F

# begin 0x0016

    - id: TotEneImp
      name: "${dev} Total Energy Import"
      address: 0x0016
      offset: 0
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.001
      unit_of_measurement: "kWh"
      icon: "mdi:transmission-tower"

    - id: TotEneExp
      name: "${dev} Total Energy Export"
      address: 0x0016
      offset: 4
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
      unit_of_measurement: "kWh"
      icon: "mdi:transmission-tower"

    - id: TotEneQ1
      name: "${dev} Total Energy Q1"
      address: 0x0016
      offset: 8
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.001
      unit_of_measurement: "kVAr"
      icon: "mdi:transmission-tower"

# eof 16

# begin 0x0026

    - id: TotEneT1
      name: "${dev} Total Energy T1 Vazio"
      address: 0x0026
      offset: 0
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.001
      unit_of_measurement: "kWh"
      icon: "mdi:transmission-tower"

    - id: TotEneT2
      name: "${dev} Total Energy T2 Ponta"
      address: 0x0026
      offset: 4
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.001
      unit_of_measurement: "kWh"
      icon: "mdi:transmission-tower"

    - id: TotEneT3
      name: "${dev} Total Energy T3 Cheia"
      address: 0x0026
      offset: 8
      modbus_functioncode: "read_input_registers"
      value_type: U_DWORD
      accuracy_decimals: 1
      filters:
        - multiply: 0.001
      unit_of_measurement: "kWh"
      icon: "mdi:transmission-tower"

# eof 26

### ### ### 

  text_sensors:

    - id: EBX1
      name: "${dev} 0x0001 Clock" 
      modbus_functioncode: "read_input_registers" 
      address: 0x0001
      offset: 0
      register_count: 1
      raw_encode: COMMA
      response_size: 12
      icon: mdi:chip

    - id: EBX4
      name: "${dev} Info: Firmware Core" 
      modbus_functioncode: "read_input_registers" 
      address: 0x0004
      offset: 0
      register_count: 1
      raw_encode: NONE
      response_size: 6
      icon: mdi:chip

    - id: EBX5
      name: "${dev} Info: Firmware App" 
      modbus_functioncode: "read_input_registers" 
      address: 0x0005
      offset: 0
      register_count: 1
      raw_encode: NONE
      response_size: 6
      icon: mdi:chip

    - id: EBX6
      name: "${dev} Info: Firmware Com"
      modbus_functioncode: "read_input_registers" 
      address: 0x0006
      offset: 0
      register_count: 1
      raw_encode: NONE
      response_size: 6
      icon: mdi:chip

    - id: EBDCP
      name: "${dev} Status DCP"
      modbus_functioncode: "read_input_registers" 
      address: 0x0084
      offset: 0
      register_count: 1
      raw_encode: COMMA
      response_size: 2
      icon: mdi:chip

    - id: EBTariff
      name: "${dev} Active Tariff"
      modbus_functioncode: "read_input_registers" 
      address: 0x000B
      offset: 0
      register_count: 1
      raw_encode: COMMA
      response_size: 2
      icon: mdi:chip

#######
# eof #
#######
