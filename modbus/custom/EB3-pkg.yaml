### EB3 modbus package ###

modbus:

  - name: edpbox3
    type: tcp
    host: 10.1.0.50
    port: 9502
    delay: 1
    timeout: 5
    retries: 5
    retry_on_empty: true
    message_wait_milliseconds: 200
  
    sensors:

      - name: "EB3 0x0001" # Clock
        slave: 1
        address: 1
        input_type: input
        count: 1
        data_type: custom
        register_size: 12
        structure: ">H7BhB"
        scan_interval: 7

      - name: "EB3 Firmware"
        slave: 1
        address: 4
        input_type: input
        count: 2
        data_type: string
        register_size: 6
        scan_interval: 35

      - name: "EB3 0x006C" # V/A
        slave: 1
        address: 108
        input_type: input
        count: 7
        data_type: custom
        structure: ">7H"
        scan_interval: 8

      - name: "EB3 0x0073" # Power
        slave: 1
        address: 115
        input_type: input
        count: 7
        data_type: custom
        register_size: 4
        structure: ">7L"
        scan_interval: 9

      - name: "EB3 0x007B" # PF
        slave: 1
        address: 123
        input_type: input
        count: 5
        data_type: custom
        register_size: 2
        structure: ">5H"
        scan_interval: 11

      - name: "EB3 0x0026" # TotEneTx
        slave: 1
        address: 38
        input_type: input
        count: 3
        data_type: custom
        register_size: 4
        structure: ">3L"
        scan_interval: 31

      - name: "EB3 0x0016" # TotEne I/E/Q
        slave: 1
        address: 22
        input_type: input
        count: 6
        data_type: custom
        register_size: 4
        structure: ">6L"
        scan_interval: 32

      - name: "EB3 0x000B" # Tariff
        slave: 1
        address: 11
        input_type: input
        count: 1
        data_type: custom
        structure: ">Bx"
        scan_interval: 33

### ### ###

# EB3 template sensor (new style)
# template: !include files/template.yaml

template:

  - sensor:

###

    - name: "EB3 HA Clock"
      state: >-
        {% if states('sensor.eb3_0x0001') is defined %}
          {{ now().strftime('%H:%M:%S') }}
        {% endif %}
      icon: mdi:calendar-clock

    - name: "EB3 Clock"
      state: >-
        {% if states('sensor.eb3_0x0001') is defined %}
          {% set hh = states('sensor.eb3_0x0001').split(',')[4] | int %}
          {% set mm = states('sensor.eb3_0x0001').split(',')[5] | int %}
          {% set ss = states('sensor.eb3_0x0001').split(',')[6] | int %}
          {{ '{0:02d}'.format(hh) + ":" + '{0:02d}'.format(mm) + ":" + '{0:02d}'.format(ss) }}
        {% else %}
          {{ states('sensor.eb3_clock') }}
        {% endif %}
      icon: mdi:clock

# 16

    - name: "EB3 Import"
      state: >-
        {% if states('sensor.eb3_0x0016') is defined %}
          {% set x = states('sensor.eb3_0x0016').split(',')[0] | float %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_import') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: measurement

    - name: "EB3 Export"
      state: >-
        {% if states('sensor.eb3_0x0016') is defined %}
          {% set x = states('sensor.eb3_0x0016').split(',')[1] | float %}
          {{ (x / 1000) | round(3) }}
        {% else %}
          {{ states('sensor.eb3_export') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: measurement

# 26

      
    - name: "EB3 T1 Vazio"
      state: >-
        {% if states('sensor.eb3_0x0026') is defined %}
          {% set x = states('sensor.eb3_0x0026').split(',')[0] | float %}
            {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t1_vazio') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: measurement

    - name: "EB3 T2 Ponta"
      state: >-
        {% if states('sensor.eb3_0x0026') is defined %}
          {% set x = states('sensor.eb3_0x0026').split(',')[1] | float %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t2_ponta') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: measurement

    - name: "EB3 T3 Cheias"
      state: >-
        {% if states('sensor.eb3_0x0026') is defined %}
          {% set x = states('sensor.eb3_0x0026').split(',')[2] | float %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t3_cheias') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: measurement

# EOF
